apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    template.alpha.openshift.io/wait-for-ready: 'true'
  creationTimestamp: '2019-05-11T19:24:07Z'
  generation: 2
  labels:
    app: mongodb-persistent
    template: mongodb-persistent-template
  name: mongodb-dotmastery
  namespace: dotmastery
  resourceVersion: '364093605'
  selfLink: >-
    /apis/apps.openshift.io/v1/namespaces/dotmastery/deploymentconfigs/mongodb-dotmastery
  uid: 58d2cc63-7422-11e9-91c0-0645a759894e
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    name: mongodb-dotmastery
  strategy:
    activeDeadlineSeconds: 21600
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        name: mongodb-dotmastery
    spec:
      containers:
        - env:
            - name: MONGODB_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: mongodb-dotmastery
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: mongodb-dotmastery
            - name: MONGODB_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-admin-password
                  name: mongodb-dotmastery
            - name: MONGODB_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: mongodb-dotmastery
          image: >-
            docker-registry.default.svc:5000/openshift/mongodb@sha256:d7e3d465bbd9a710c14e29087aef8a10f2d90ed20657d02ffab88098abb87cb9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 27017
            timeoutSeconds: 1
          name: mongodb
          ports:
            - containerPort: 27017
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - '-i'
                - '-c'
                - >-
                  mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p
                  $MONGODB_PASSWORD --eval="quit()"
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/lib/mongodb/data
              name: mongodb-dotmastery-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: mongodb-dotmastery-data
          persistentVolumeClaim:
            claimName: mongodb-dotmastery
  test: false
  triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
          - mongodb
        from:
          kind: ImageStreamTag
          name: 'mongodb:3.6'
          namespace: openshift
        lastTriggeredImage: >-
          docker-registry.default.svc:5000/openshift/mongodb@sha256:d7e3d465bbd9a710c14e29087aef8a10f2d90ed20657d02ffab88098abb87cb9
      type: ImageChange
    - type: ConfigChange
status:
  availableReplicas: 1
  conditions:
    - lastTransitionTime: '2019-05-11T19:24:41Z'
      lastUpdateTime: '2019-05-11T19:24:41Z'
      message: replication controller "mongodb-dotmastery-1" successfully rolled out
      reason: NewReplicationControllerAvailable
      status: 'True'
      type: Progressing
    - lastTransitionTime: '2019-05-15T20:04:32Z'
      lastUpdateTime: '2019-05-15T20:04:32Z'
      message: Deployment config has minimum availability.
      status: 'True'
      type: Available
  details:
    causes:
      - type: ConfigChange
    message: config change
  latestVersion: 1
  observedGeneration: 2
  readyReplicas: 1
  replicas: 1
  unavailableReplicas: 0
  updatedReplicas: 1
